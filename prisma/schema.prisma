// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid      String   @unique @default(uuid())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  userName  String   @map("user_name")
  email     String   @unique
  password  String
  role      Role     @relation(fields: [roleUuid], references: [uuid])
  roleUuid  String   @map(name: "role_uuid")
  createdAt DateTime @default(now()) @map("created_at")

  token Token[]
  cart  Cart[]
  order Order[]

  @@map("users")
}

model Product {
  uuid         String   @unique @default(uuid())
  name         String
  description  String
  unitPrice    Float    @map("unit_price")
  stock        Int
  category     Category @relation(fields: [categoryUuid], references: [uuid])
  categoryUuid String   @map(name: "category_uuid")

  cartItem CartItem[]

  @@map("products")
}

model Category {
  uuid String @unique @default(uuid())
  name String

  product Product[]

  @@map("categories")
}

model Cart {
  uuid       String     @unique @default(uuid())
  user       User       @relation(fields: [userUuid], references: [uuid])
  userUuid   String     @map(name: "user_uuid")
  totalPrice Float      @map("total_price")
  cartItem   CartItem[]

  @@map("carts")
}

model CartItem {
  uuid        String      @unique @default(uuid())
  cart        Cart        @relation(fields: [cartUuid], references: [uuid])
  cartUuid    String      @map(name: "cart_uud")
  product     Product     @relation(fields: [productUuid], references: [uuid])
  productUuid String      @map(name: "product_uuid")
  quantity    Int
  unitPrice   Float       @map("unit_price")
  orderItem   OrderItem[]

  @@map("cartItems")
}

model OrderItem {
  uuid         String    @unique @default(uuid())
  order        Order     @relation(fields: [orderUuid], references: [uuid])
  orderUuid    String    @map(name: "order_uuid")
  quantity     Int
  unitPrice    Float     @map("unit_price")
  CartItem     CartItem? @relation(fields: [cartItemUuid], references: [uuid])
  cartItemUuid String?

  @@map("orderItems")
}

model Order {
  uuid      String      @unique @default(uuid())
  user      User        @relation(fields: [userUuid], references: [uuid])
  userUuid  String      @map(name: "user_uuid")
  OrderItem OrderItem[]

  @@map("orders")
}

model Role {
  uuid String @unique @default(uuid())
  name String
  user User[]

  @@map("roles")
}

model Token {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userUuid], references: [uuid])
  userUuid  String   @map(name: "user_uuid")
  jti       String   @unique @default(uuid())
  createdAt DateTime @default(now()) @map(name: "created_at")

  @@map(name: "tokens")
}
